#!/usr/local/bin/python2.7
from email.mime.text import MIMEText
from datetime import datetime

import smtplib
import csv
import sys
import os
import math
import time
import pandas as pd

import py_jsonlib as jsonlib

# email account
# email: ########
# password: #####

def get_email_list(emaillist):
	try:
		email_array = []
		jsonData = jsonlib.open_json('', emaillist+'.json')
		email_list = jsonData["Emails"]
		list_email = email_list.items()

		for email_ctr in range(0,len(list_email)):
			email_array.append(list_email[email_ctr][1])

	except KeyError:
		print "Invalid email list."
		exit()
		
	return email_array

def send_mail_PR(proj_name, proj_code, emaillist, upl_filename, upl_pr_dtime, upl_pr_invID, upl_pr_val, upl_pr_rowCnt):
	#List of emails
	list_of_emails = get_email_list(emaillist)
	list_of_up_inv = ''
	buffer_list = []
	for buff_ctr in range(0,len(list_of_emails)):
		buffer_list.append(list_of_emails[buff_ctr])
	
	email_toggle = 0
	email_body = ''
	header = 'PR Report for: '+str(proj_name)+'\n'
	greetings = 'This report is autogenerated.\n\n'
	email_body = email_body + header
	email_body = email_body + greetings
	
	for upl_ctr in range(0,len(upl_filename)):
		#check if send
		if upl_pr_rowCnt[upl_ctr] > 0:
			data_column = 'Datetime, Inverter ID, Performance Ratio'
			number_col = '# of Underperforming Inverters: '+str(upl_pr_rowCnt[upl_ctr])
			inv_string = "Area Code: "+str(upl_filename[upl_ctr]).replace('.csv','')+'\n'+number_col+'\n'+data_column+'\n'
			for pr_rowCtr in range(0, upl_pr_rowCnt[upl_ctr]):
				if upl_pr_val[upl_ctr][pr_rowCtr] >= 0:
					pr_data_row = str(upl_pr_dtime[upl_ctr][pr_rowCtr])+', '+str(upl_pr_invID[upl_ctr][pr_rowCtr])+', '+str(upl_pr_val[upl_ctr][pr_rowCtr])+'\n'
					inv_string = inv_string + pr_data_row
				else:
					inv_string = inv_string + "Inverter #"+str(upl_pr_invID[upl_ctr][pr_rowCtr])+": Unable to compute PR; Please check inverter connection."+'\n'
			email_body = email_body + inv_string+'\n'
			email_toggle = 1
			
	e_msg = MIMEText(email_body)
	e_msg['Subject'] = 'Performance Ratio Alert ['+str(proj_name)+']'
	e_msg['From'] = 'alerts@solenergy.ph'
	e_msg['To'] = ", ".join(buffer_list)
	
	try:
		if email_toggle > 0:
			print str(e_msg)
			smtp_var = smtplib.SMTP('insert smtpserver info', 'smtpserver port number')
			smtp_var.login('smtpserver_username', 'smtpserver_password')
			smtp_var.sendmail('from sender', 'to email addresses', e_msg.as_string())
			smtp_var.quit()
			print "Mail sent successfully!"
		else:
			print "Nothing to send"	
	except Exception:
		print "Mail sending failed."
		exit()